name: CI

# Run on pushes to main/master and all pull requests
on:
  push:
    branches: [ main, master ]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # test-linux:
  #   name: Test on linux
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4

  #   - name: Install Rust
  #     uses: dtolnay/rust-toolchain@stable
  #     with:
  #       components: rustfmt, clippy

  #   - name: Cache cargo registry
  #     uses: actions/cache@v3
  #     with:
  #       path: |
  #         ~/.cargo/registry
  #         ~/.cargo/git
  #         target
  #       key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
  #       restore-keys: |
  #         ${{ runner.os }}-cargo-

  #   - name: Check formatting
  #     run: cargo fmt --all -- --check

  #   - name: Run Clippy
  #     run: cargo clippy --all-targets --all-features -- -D warnings

  #   - name: Build
  #     run: cargo build --verbose

  #   - name: Run tests
  #     run: cargo test --verbose

  test-windows:
    name: Test on Windows
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build
      run: cargo build --verbose

    - name: Run tests
      run: cargo test --verbose

  test-macos:
    name: Test on macOS
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build
      run: cargo build --verbose

    - name: Run tests
      run: cargo test --verbose